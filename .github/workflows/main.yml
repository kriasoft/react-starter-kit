# GitHub Actions workflow
# https://help.github.com/actions

name: CI/CD

on:
  push:
    branches: [main]
    tags:
      - "v*"
  pull_request:
    branches: [main]
  schedule:
    - cron: "0 7 * * *"
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment"
        type: environment
        default: "test"
        required: true

env:
  BUN_VERSION: latest
  VERSION: ${{ github.event.pull_request.number }}
  HUSKY: 0

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: "Build"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      # Configure Bun and install dependencies
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}
      - run: bun install

      # Analyze code for potential problems
      - run: bun prettier --check .
        if: ${{ github.event_name == 'pull_request' }}
      - run: bun lint
        if: ${{ github.event_name == 'pull_request' }}

      - run: bun --filter app build
      - run: bun tsc --build
      # - run: bun --filter app test
      #   if: ${{ github.event_name == 'pull_request' }}
      # - run: bun --filter edge test
      #   if: ${{ github.event_name == 'pull_request' }}

      # Validate Terraform configuration and formatting
      - uses: hashicorp/setup-terraform@v3
      - run: terraform fmt -check -recursive infra/
      # - run: terraform validate infra/environments/preview/

      # Compile
      - run: bun run build

      # Build Docker image (only on main branch pushes or manual triggers)
      - run: docker build --tag api:${{ github.sha }} -f ./api/Dockerfile .
      - run: docker save api:${{ github.sha }} | gzip > api-image.tar.gz

      # Upload build artifacts
      - uses: actions/upload-artifact@v4
        with:
          name: "build"
          path: "app/dist\nedge/dist\napi/dist\napi-image.tar.gz\n"

  deploy-preview:
    name: "Deploy"
    needs: [build]
    if: github.event_name == 'pull_request'
    uses: ./.github/workflows/deploy.yml
    with:
      name: Preview
      environment: preview
      url: https://{codename}.example.com
    secrets: inherit
    permissions:
      deployments: write
      pull-requests: read

  deploy-staging:
    name: "Deploy"
    needs: [build]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    uses: ./.github/workflows/deploy.yml
    with:
      name: Staging
      environment: staging
      url: https://staging.example.com
    secrets: inherit
    permissions:
      deployments: write
      pull-requests: read

  deploy-prod:
    name: "Deploy"
    needs: [build]
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production'
    uses: ./.github/workflows/deploy.yml
    with:
      name: Production
      environment: production
      url: https://example.com
    secrets: inherit
    permissions:
      deployments: write
      pull-requests: read
